{"version":3,"sources":["Player.js","SceneMap.js","Scene.js","App.js","serviceWorker.js","index.js"],"names":["Player","scene","Object","classCallCheck","this","onKeyDown","bind","onKeyUp","buffer","velocity","THREE","position","direction","orientation","Math","sqrt","actions","moveForward","moveBackward","moveLeft","moveRight","canJump","dampening","speed","meshes","gltfMeshes","GLTFLoader","load","gltf","push","add","event","code","y","console","log","delta","onObject","cameraQuat","x","z","Number","normalize","applyQuaternion","clone","invert","intersection","blossomCands","children","filter","child","name","length","downOrigin","intersectObject","point","velQuat","setFromUnitVectors","slerp","_step","_iterator","_createForOfIteratorHelper","s","n","done","mesh","value","setRotationFromQuaternion","copy","err","e","f","SceneMap","stem","undefined","blossom","spawnRegionSize","count","ages","Float32Array","scales","phaseSpeed","maxHeight","loader","dummy","dummyPos","dummyNorm","dummyScale","initFunc","init","_stemMesh","getObjectByName","_blossomMesh","stemGeometry","geometry","blossomGeometry","defaultTransform","makeRotationX","PI","multiply","makeScale","applyMatrix4","stemMaterial","material","blossomMaterial","color","blossomPalette","i","setHex","floor","random","setColorAt","instanceMatrix","setUsage","resample","resampleParticle","needsUpdate","scaleCurve","scale","set","lookAt","updateMatrix","setMatrixAt","matrix","t","abs","easeOutCubic","prevScale","getMatrixAt","updateParticle","Scene","props","_this","possibleConstructorReturn","getPrototypeOf","call","state","start","assertThisInitialized","stop","animate","renderScene","setupScene","destroyContext","handleWindowResize","window","addEventListener","width","container","clientWidth","height","clientHeight","renderer","antialias","setPixelRatio","devicePixelRatio","shadowMap","enabled","gammaOutput","gammaFactor","type","background","camera","player","sceneMap","document","gridHelper","plane","opacity","transparent","rotation","spotLight","ambLight","updateProjectionMatrix","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableKeys","screenSpacePanning","enableRotate","autoRotateSpeed","enablePan","target","update","setSize","appendChild","frameId","requestAnimationFrame","render","oldPos","quaternion","sub","addVectors","cancelAnimationFrame","innerWidth","innerHeight","aspect","removeChild","forceContextLoss","context","_this2","react_default","a","createElement","ref","style","overflow","Component","App","src_Scene","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iyCAmMeA,aA7Ld,SAAAA,EAAYC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAEnBI,KAAKH,MAAQA,EACbG,KAAKC,UAAYD,KAAKC,UAAUC,KAAKF,MACrCA,KAAKG,QAAUH,KAAKG,QAAQD,KAAKF,MACjCA,KAAKI,OAAS,EAEdJ,KAAKK,SAAW,IAAIC,KAAc,EAAG,EAAG,GACxCN,KAAKO,SAAW,IAAID,KAAc,EAAG,EAAG,GACxCN,KAAKQ,UAAY,IAAIF,KAAc,EAAG,EAAG,GACzCN,KAAKS,YAAc,IAAIH,KAAiB,EAAGI,KAAKC,KAAK,IAAM,EAAGD,KAAKC,KAAK,KACxEX,KAAKY,QAAU,CACdC,aAAa,EACbC,cAAc,EACdC,UAAU,EACVC,WAAW,EACXC,SAAS,GAGVjB,KAAKkB,UAAY,GACjBlB,KAAKmB,MAAQ,IAEbnB,KAAKoB,OAAS,GAqBd,IAAIC,EAAarB,KAAKoB,QACP,IAAIE,KACZC,KACN,sBACA,SAAUC,GACTH,EAAWI,KAAKD,EAAK3B,OACrBA,EAAM6B,IAAIF,EAAK3B,+DAKR8B,GAET,OAAQA,EAAMC,MAEb,IAAK,UACL,IAAK,OACJ5B,KAAKY,QAAQC,aAAc,EAC3B,MAED,IAAK,YACL,IAAK,OACJb,KAAKY,QAAQG,UAAW,EACxB,MAED,IAAK,YACL,IAAK,OACJf,KAAKY,QAAQE,cAAe,EAC5B,MAED,IAAK,aACL,IAAK,OACJd,KAAKY,QAAQI,WAAY,EACzB,MAED,IAAK,SACyB,IAAzBhB,KAAKY,QAAQK,UAChBjB,KAAKK,SAASwB,GAAK,KAGpB,MAED,QACCC,QAAQC,IAAI,sBAAwBJ,EAAMC,uCAMrCD,GAEP,OAAQA,EAAMC,MAEb,IAAK,UACL,IAAK,OACJ5B,KAAKY,QAAQC,aAAc,EAC3B,MAED,IAAK,YACL,IAAK,OACJb,KAAKY,QAAQG,UAAW,EACxB,MAED,IAAK,YACL,IAAK,OACJf,KAAKY,QAAQE,cAAe,EAC5B,MAED,IAAK,aACL,IAAK,OACJd,KAAKY,QAAQI,WAAY,EACzB,MAED,QACCc,QAAQC,IAAI,sBAAwBJ,EAAMC,sCAKtCI,EAAOC,EAAUC,GACvBlC,KAAKK,SAAS8B,GAAKnC,KAAKK,SAAS8B,EAAInC,KAAKkB,UAAYc,EACtDhC,KAAKK,SAAS+B,GAAKpC,KAAKK,SAAS+B,EAAIpC,KAAKkB,UAAYc,EACtDhC,KAAKK,SAASwB,GAAuB,IAAlB7B,KAAKK,SAASwB,EAAW7B,KAAKkB,UAAYc,EAE7DhC,KAAKK,SAASwB,GAAK,IAAM,IAAQG,EAEjChC,KAAKQ,UAAU4B,EAAIC,OAAOrC,KAAKY,QAAQC,aAAewB,OAAOrC,KAAKY,QAAQE,cAC1Ed,KAAKQ,UAAU2B,EAAIE,OAAOrC,KAAKY,QAAQI,WAAaqB,OAAOrC,KAAKY,QAAQG,UACxEf,KAAKQ,UAAU8B,YACS,GAApBtC,KAAKQ,UAAU2B,GAA8B,GAApBnC,KAAKQ,UAAU4B,IAC3CpC,KAAKQ,UAAU+B,gBAAgBL,EAAWM,QAAQC,UAClDzC,KAAKQ,UAAUqB,EAAI,EACnB7B,KAAKQ,UAAU8B,YAEftC,KAAKK,SAAS+B,GAAKpC,KAAKQ,UAAU4B,EAAIpC,KAAKmB,MAAQa,EAGnDhC,KAAKK,SAAS8B,GAAKnC,KAAKQ,UAAU2B,EAAInC,KAAKmB,MAAQa,GAKpDhC,KAAKO,SAAS4B,IAAOnC,KAAKK,SAAS8B,EAAIH,EACvChC,KAAKO,SAAS6B,GAAMpC,KAAKK,SAAS+B,EAAIJ,EACtC,IAAIU,EAAe,GAEfC,EAAe3C,KAAKH,MAAM+C,SAASC,OAAO,SAACC,GAAD,MAAyB,WAAdA,EAAMC,OAC/D,GAAIJ,EAAaK,OAAS,GAAMhD,KAAKI,OAAUJ,KAAKK,SAASwB,EAAIG,EAAS,EAAG,CAC5E,IAAIiB,EAAajD,KAAKO,SAASiC,QAC/BS,EAAWpB,EAAIoB,EAAWpB,EAAI7B,KAAKI,OAGnCsC,EAFY,IAAIpC,KAAgBN,KAAKO,SAAU,IAAID,KAAc,GAAI,EAAG,GAAI,EAAGN,KAAKI,OAAUJ,KAAKK,SAASwB,EAAIG,GAEvFkB,gBAAgBP,EAAa,IAoBvD,GAhBID,EAAaM,OAAS,GACzBhD,KAAKO,SAASsB,EAAIa,EAAa,GAAGS,MAAMtB,EAAI7B,KAAKI,OACjDJ,KAAKK,SAASwB,EAAI,GAElB7B,KAAKO,SAASsB,GAAM7B,KAAKK,SAASwB,EAAIG,EAGnChC,KAAKO,SAASsB,EAAI,IAErB7B,KAAKK,SAASwB,EAAI,EAClB7B,KAAKO,SAASsB,EAAI,EAElB7B,KAAKY,QAAQK,SAAU,GAIc,GAAlCjB,KAAKK,SAASmC,QAAQQ,SAAe,CACxC,IAAII,EAAU,IAAI9C,KAClB8C,EAAQC,mBAAmB,IAAI/C,MAAe,EAAG,EAAG,GAAIN,KAAKK,SAASmC,QAAQF,aAC9Ec,EAAQX,SACRzC,KAAKS,YAAY6C,MAAMF,EAAS,KAzDE,IAAAG,EAAAC,EAAAC,EA4DlBzD,KAAKoB,QA5Da,IA4DnC,IAAAoC,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA8B,KAArBC,EAAqBN,EAAAO,MAC7BD,EAAKE,0BAA0B/D,KAAKS,aACpCoD,EAAKtD,SAASyD,KAAKhE,KAAKO,SAASiC,UA9DC,MAAAyB,GAAAT,EAAAU,EAAAD,GAAA,QAAAT,EAAAW,cC8BtBC,aAxJd,SAAAA,EAAYvE,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,GACnBpE,KAAKH,MAAQA,EAEbG,KAAKoB,OAAS,CAAEiD,UAAMC,EAAWC,aAASD,GAC1CtE,KAAKwE,gBAAkB,KACvBxE,KAAKyE,MAAQ,IACbzE,KAAK0E,KAAO,IAAIC,aAAa3E,KAAKyE,OAClCzE,KAAK4E,OAAS,IAAID,aAAa3E,KAAKyE,OACpCzE,KAAK6E,WAAa,IAClB7E,KAAK8E,UAAY,IAEjB,IAAMC,EAAS,IAAIzD,IAEnBtB,KAAKgF,MAAQ,IAAI1E,IACjBN,KAAKiF,SAAW,IAAI3E,KAAc,EAAG,EAAG,GACxCN,KAAKkF,UAAY,IAAI5E,KAAc,EAAG,EAAG,GACzCN,KAAKmF,WAAa,IAAI7E,KAAc,EAAG,EAAG,GAE1C,IAAI8E,EAAWpF,KAAKqF,KAAKnF,KAAKF,MAC9B+E,EAAOxD,KAAK,6DAA8D,SAAUC,GACnF4D,EAAS5D,sDAMNA,GACJ,IAAM8D,EAAY9D,EAAK3B,MAAM0F,gBAAgB,QACvCC,EAAehE,EAAK3B,MAAM0F,gBAAgB,WAE5CE,EAAeH,EAAUI,SAASlD,QAClCmD,EAAkBH,EAAaE,SAASlD,QAEtCoD,GAAmB,IAAItF,KAC3BuF,cAAcnF,KAAKoF,GAAK,GACxBC,UAAS,IAAIzF,KAAgB0F,UAAU,EAAG,EAAG,IAE/CP,EAAaQ,aAAaL,GAC1BD,EAAgBM,aAAaL,GAE7B,IAAIM,EAAeZ,EAAUa,SACzBC,EAAkBZ,EAAaW,SAEnCnG,KAAKoB,OAAL,KAAsB,IAAId,IAAoBmF,EAAcS,EAAclG,KAAKyE,OAC/EzE,KAAKoB,OAAL,QAAyB,IAAId,IAAoBqF,EAAiBS,EAAiBpG,KAAKyE,OAMxF,IAHA,IAAM4B,EAAQ,IAAI/F,IACZgG,EAAiB,CAAC,SAAU,SAAU,SAAU,SAAU,UAEvDC,EAAI,EAAGA,EAAIvG,KAAKyE,MAAO8B,IAE/BF,EAAMG,OAAOF,EAAe5F,KAAK+F,MAAM/F,KAAKgG,SAAWJ,EAAetD,UACtEhD,KAAKoB,OAAL,QAAuBuF,WAAWJ,EAAGF,GAKtCrG,KAAKoB,OAAL,KAAoBwF,eAAeC,SAASvG,KAC5CN,KAAKoB,OAAL,QAAuBwF,eAAeC,SAASvG,KAE/CN,KAAKoB,OAAL,KAAoB2B,KAAO,OAC3B/C,KAAKoB,OAAL,QAAuB2B,KAAO,UAE9B/C,KAAK8G,WAEL9G,KAAKH,MAAM6B,IAAI1B,KAAKoB,OAAL,MACfpB,KAAKH,MAAM6B,IAAI1B,KAAKoB,OAAL,4CAMf,IAAK,IAAImF,EAAI,EAAGA,EAAIvG,KAAKyE,MAAO8B,IAC/BvG,KAAK+G,iBAAiBR,GAGvBvG,KAAKoB,OAAL,KAAoBwF,eAAeI,aAAc,EACjDhH,KAAKoB,OAAL,QAAuBwF,eAAeI,aAAc,2CAIpCT,GAChBvG,KAAK0E,KAAK6B,GAAK7F,KAAKgG,SACpB1G,KAAK4E,OAAO2B,GAAKvG,KAAKiH,WAAWjH,KAAK0E,KAAK6B,IAE3CvG,KAAKiF,SAAS9C,EAA2B,EAAvBnC,KAAKwE,iBAAuB9D,KAAKgG,SAAW,IAC9D1G,KAAKiF,SAAS7C,EAA2B,EAAvBpC,KAAKwE,iBAAuB9D,KAAKgG,SAAW,IAE9D1G,KAAKgF,MAAMzE,SAASyD,KAAKhE,KAAKiF,UAC9BjF,KAAKgF,MAAMkC,MAAMC,IAAInH,KAAK4E,OAAO2B,GAAIvG,KAAK4E,OAAO2B,GAAIvG,KAAK4E,OAAO2B,IACjEvG,KAAKgF,MAAMoC,OAAOpH,KAAKkF,WACvBlF,KAAKgF,MAAMqC,eAEXrH,KAAKoB,OAAL,KAAoBkG,YAAYf,EAAGvG,KAAKgF,MAAMuC,QAC9CvH,KAAKoB,OAAL,QAAuBkG,YAAYf,EAAGvG,KAAKgF,MAAMuC,2CAIvCC,GACV,OAAOxH,KAAK8E,UAAYpE,KAAK+G,IAAIzH,KAAK0H,aAAqC,GAAvBF,EAAI,GAAM,EAAIA,EAAIA,0CAG1DA,GACZ,QAAUA,EAAKA,EAAIA,EAAI,yCAGTjB,EAAGvE,GAGjB,GAFAhC,KAAK0E,KAAK6B,IAAMvE,EAAQhC,KAAK6E,WAEzB7E,KAAK0E,KAAK6B,IAAM,EAOnB,OALAvG,KAAK0E,KAAK6B,GAAK,KACfvG,KAAK4E,OAAO2B,GAAKvG,KAAKiH,WAAWjH,KAAK0E,KAAK6B,SAE3CvG,KAAK+G,iBAAiBR,GAQvB,IAAMoB,EAAY3H,KAAK4E,OAAO2B,GAC9BvG,KAAK4E,OAAO2B,GAAKvG,KAAKiH,WAAWjH,KAAK0E,KAAK6B,IAC3CvG,KAAKmF,WAAWgC,IAAInH,KAAK4E,OAAO2B,GAAKoB,EAAW3H,KAAK4E,OAAO2B,GAAKoB,EAAW3H,KAAK4E,OAAO2B,GAAKoB,GAI7F3H,KAAKoB,OAAL,KAAoBwG,YAAYrB,EAAGvG,KAAKgF,MAAMuC,QAC9CvH,KAAKgF,MAAMuC,OAAOL,MAAMlH,KAAKmF,YAC7BnF,KAAKoB,OAAL,KAAoBkG,YAAYf,EAAGvG,KAAKgF,MAAMuC,QAC9CvH,KAAKoB,OAAL,QAAuBkG,YAAYf,EAAGvG,KAAKgF,MAAMuC,uCAI3CvF,GACN,GAAIhC,KAAKoB,OAAL,MAAuBpB,KAAKoB,OAAL,QAAwB,CAElD,IAAK,IAAImF,EAAI,EAAGA,EAAIvG,KAAKyE,MAAO8B,IAE/BvG,KAAK6H,eAAetB,EAAGvE,GAIxBhC,KAAKoB,OAAL,KAAoBwF,eAAeI,aAAc,EACjDhH,KAAKoB,OAAL,QAAuBwF,eAAeI,aAAc,YCmBxCc,cAnKd,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAlI,OAAAC,EAAA,EAAAD,CAAAE,KAAA8H,IAClBE,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAE,KAAAF,OAAAoI,EAAA,EAAApI,CAAAgI,GAAAK,KAAAnI,KAAM+H,KACDK,MAAQ,GACbJ,EAAKK,MAAQL,EAAKK,MAAMnI,KAAXJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KACbA,EAAKO,KAAOP,EAAKO,KAAKrI,KAAVJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KACZA,EAAKQ,QAAUR,EAAKQ,QAAQtI,KAAbJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KACfA,EAAKS,YAAcT,EAAKS,YAAYvI,KAAjBJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KACnBA,EAAKU,WAAaV,EAAKU,WAAWxI,KAAhBJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KAClBA,EAAKW,eAAiBX,EAAKW,eAAezI,KAApBJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KACtBA,EAAKY,mBAAqBZ,EAAKY,mBAAmB1I,KAAxBJ,OAAAwI,EAAA,EAAAxI,QAAAwI,EAAA,EAAAxI,CAAAkI,KATRA,oFAalBa,OAAOC,iBAAiB,SAAU9I,KAAK4I,gEAIvC5I,KAAK0I,kDAIL1I,KAAK+I,MAAQ/I,KAAKgJ,UAAUC,YAC5BjJ,KAAKkJ,OAASlJ,KAAKgJ,UAAUG,aAE7B,IAAMC,EAAW,IAAI9I,KAAoB,CAAE+I,WAAW,IACtDD,EAASE,cAAcT,OAAOU,kBAC9BH,EAASI,UAAUC,SAAU,EAC7BL,EAASM,aAAc,EACvBN,EAASO,YAAc,IACvBP,EAASI,UAAUI,KAAOtJ,IAE1B,IAAIT,EAAQ,IAAIS,KAChBT,EAAMgK,WAAa,IAAIvJ,IAAY,SAEnC,IAAIwJ,EAAS,IAAIxJ,IAChB,GACAN,KAAK+I,MAAQ/I,KAAKkJ,OAClB,IACA,MAEDrJ,EAAM6B,IAAIoI,GAGV9J,KAAKoJ,SAAWA,EAChBpJ,KAAKH,MAAQA,EACbG,KAAK8J,OAASA,EACd9J,KAAK+J,OAAS,IAAInK,EAAOC,GACzBG,KAAKgK,SAAW,IAAI5F,EAASvE,GAE7BoK,SAASnB,iBAAiB,UAAW9I,KAAK+J,OAAO9J,WACjDgK,SAASnB,iBAAiB,QAAS9I,KAAK+J,OAAO5J,SAE/C,IAAI+J,EAAa,IAAI5J,IAAiB,IAAM,KAC5CT,EAAM6B,IAAIwI,GAEV,IAAMC,EAAQ,IAAI7J,IACjB,IAAIA,IAAqB,IAAO,IAAQ,IAAK,KAC7C,IAAIA,IAAyB,CAAE+F,MAAO,SAAU+D,QAAS,EAAKC,aAAa,KAE5EF,EAAM5J,SAASsB,GAAK,GACpBsI,EAAMG,SAASnI,GAAMzB,KAAKoF,GAAK,EAC/BjG,EAAM6B,IAAIyI,GAEV,IAAII,EAAY,IAAIjK,KAAgB,SAAU,KAC9CiK,EAAUhK,SAAS4G,IAAI,GAAI,GAAI,IAC/B2C,EAAOpI,IAAI6I,GACXvK,KAAKuK,UAAYA,EAEjB,IAAIC,EAAW,IAAIlK,IAAmB,SACtCkK,EAASjK,SAAS4G,IAAI,EAAG,EAAG,GAC5BnH,KAAK8J,OAAOpI,IAAI8I,GAEhBxK,KAAK8J,OAAO1C,OAAOpH,KAAK+J,OAAOxJ,SAASiC,SACxCxC,KAAK8J,OAAOW,yBACZzK,KAAK8J,OAAOvJ,SAAS6B,EAAI,IAEzB,IAAIsI,EAAW,IAAIC,IAAc3K,KAAK8J,OAAQ9J,KAAKoJ,SAASwB,YAC5DF,EAASG,eAAgB,EACzBH,EAASI,cAAgB,IACzBJ,EAASK,YAAa,EACtBL,EAASM,UAAY,IACrBN,EAASO,YAAa,EACtBP,EAASQ,oBAAqB,EAC9BR,EAASS,cAAe,EAExBT,EAASI,cAAgB,EACzBJ,EAASU,gBAAkB,IAC3BV,EAASW,WAAY,EACrBX,EAASY,OAAOtH,KAAKhE,KAAK+J,OAAOxJ,UACjCmK,EAASa,SACTvL,KAAK0K,SAAWA,EAChB1K,KAAKoJ,SAASoC,QAAQxL,KAAK+I,MAAO/I,KAAKkJ,QACvClJ,KAAKgJ,UAAUyC,YAAYzL,KAAKoJ,SAASwB,YACzC5K,KAAKqI,wCAIArI,KAAK0L,UACT1L,KAAK0L,QAAUC,sBAAsB3L,KAAKwI,gDAK3CxI,KAAKoJ,SAASwC,OAAO5L,KAAKH,MAAOG,KAAK8J,0CAItC9J,KAAKgK,SAASuB,OAAO,KACrBvL,KAAK0L,QAAUC,sBAAsB3L,KAAKwI,SAC1CxI,KAAK0K,SAASa,SACd,IAAIM,EAAS7L,KAAK+J,OAAOxJ,SAASiC,QAClCxC,KAAK+J,OAAOwB,OAAO,KAAM,EAAMvL,KAAK8J,OAAOgC,YAC3C,IAAI9J,EAAQhC,KAAK+J,OAAOxJ,SAASiC,QAAQuJ,IAAIF,GAC7C7L,KAAK0K,SAASY,OAAOtH,KAAKhE,KAAK+J,OAAOxJ,UACtCP,KAAK8J,OAAOvJ,SAASyL,WAAWhM,KAAK8J,OAAOvJ,SAAUyB,GAItDhC,KAAKyI,6CAILwD,qBAAqBjM,KAAK0L,sDAI1B,IAAI3C,EAAQF,OAAOqD,WACfhD,EAASL,OAAOsD,YACpBnM,KAAK8J,OAAOsC,OAASrD,EAAQG,EAC7BlJ,KAAK8J,OAAOW,wEAIZzK,KAAKuI,OACLvI,KAAK2I,0DAIL3I,KAAKgJ,UAAUqD,YAAYrM,KAAKoJ,SAASwB,YACzC5K,KAAKoJ,SAASkD,mBACdtM,KAAKoJ,SAASmD,QAAU,KACxBvM,KAAKoJ,SAASwB,WAAa,KAC3B5K,KAAKoJ,SAAW,sCAGR,IAAAoD,EAAAxM,KAGR,OACCyM,EAAAC,EAAAC,cAAA,OACCC,IAAK,SAAC5D,GACLwD,EAAKxD,UAAYA,GAElB6D,MAAO,CACN9D,MARW,OASXG,OARY,OASZ3I,SAAU,WACVuM,SAAU,mBA9JKC,aCKLC,mLARX,OACEP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACM,EAAD,cAJUF,aCUEG,QACW,cAA7BrE,OAAOsE,SAASC,UAEe,UAA7BvE,OAAOsE,SAASC,UAEhBvE,OAAOsE,SAASC,SAASC,MACvB,2DCZNC,IAAS1B,OAAOa,EAAAC,EAAAC,cAACY,EAAD,MAAStD,SAASuD,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5d00707b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Vector2, Vector3 } from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\n\r\nclass Player {\r\n\tconstructor(scene) {\r\n\r\n\t\tthis.scene = scene;\r\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\r\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\r\n\t\tthis.buffer = 5;\r\n\r\n\t\tthis.velocity = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.position = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.direction = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.orientation = new THREE.Quaternion(0, Math.sqrt(0.5), 0, Math.sqrt(0.5));\r\n\t\tthis.actions = {\r\n\t\t\tmoveForward: false,\r\n\t\t\tmoveBackward: false,\r\n\t\t\tmoveLeft: false,\r\n\t\t\tmoveRight: false,\r\n\t\t\tcanJump: false\r\n\t\t};\r\n\r\n\t\tthis.dampening = 40;\r\n\t\tthis.speed = 10000;\r\n\r\n\t\tthis.meshes = [];\r\n\t\t/* \t\tlet sphere = new THREE.SphereGeometry(50, 300, 300);\r\n\t\t\t\tlet material = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\tmap: new THREE.TextureLoader().load(\"/Assets/2_no_clouds_4k.jpg\"),\r\n\t\t\t\t\tbumpMap: new THREE.TextureLoader().load(\"/Assets/elev_bump_4k.jpg\"),\r\n\t\t\t\t\tbumpScale: 0.005,\r\n\t\t\t\t\tspecularMap: THREE.ImageUtils.loadTexture(\"/Assets/water_4k.png\"),\r\n\t\t\t\t\tspecular: new THREE.Color(\"grey\"),\r\n\t\t\t\t});\r\n\t\t\t\tlet mesh = new THREE.Mesh(sphere, material);\r\n\t\t\r\n\t\t\t\tthis.meshes.push(mesh);\r\n\t\t\t\tscene.add(mesh);\r\n\t\t\t\tsphere = new THREE.SphereGeometry(50.1, 300, 300);\r\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\tmap: new THREE.TextureLoader().load(\"/Assets/fair_clouds_4k.png\"),\r\n\t\t\t\t\ttransparent: true,\r\n\t\t\t\t});\r\n\t\t\t\tmesh = new THREE.Mesh(sphere, material);\r\n\t\t\t\tthis.meshes.push(mesh);\r\n\t\t\t\tscene.add(mesh); */\r\n\t\tlet gltfMeshes = this.meshes;\r\n\t\tconst loader = new GLTFLoader();\r\n\t\tloader.load(\r\n\t\t\t'/Assets/spider.gltf',\r\n\t\t\tfunction (gltf) {\r\n\t\t\t\tgltfMeshes.push(gltf.scene)\r\n\t\t\t\tscene.add(gltf.scene);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tonKeyDown(event) {\r\n\r\n\t\tswitch (event.code) {\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\tcase 'KeyW':\r\n\t\t\t\tthis.actions.moveForward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'KeyA':\r\n\t\t\t\tthis.actions.moveLeft = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\tcase 'KeyS':\r\n\t\t\t\tthis.actions.moveBackward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\tcase 'KeyD':\r\n\t\t\t\tthis.actions.moveRight = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Space':\r\n\t\t\t\tif (this.actions.canJump === true) {\r\n\t\t\t\t\tthis.velocity.y += 200;\r\n\t\t\t\t}\r\n\t\t\t\t//this.actions.canJump = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Unknown key input: \" + event.code);\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tonKeyUp(event) {\r\n\r\n\t\tswitch (event.code) {\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\tcase 'KeyW':\r\n\t\t\t\tthis.actions.moveForward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'KeyA':\r\n\t\t\t\tthis.actions.moveLeft = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\tcase 'KeyS':\r\n\t\t\t\tthis.actions.moveBackward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\tcase 'KeyD':\r\n\t\t\t\tthis.actions.moveRight = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Unknown key input: \" + event.code);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate(delta, onObject, cameraQuat) {\r\n\t\tthis.velocity.x -= this.velocity.x * this.dampening * delta;\r\n\t\tthis.velocity.z -= this.velocity.z * this.dampening * delta;\r\n\t\tthis.velocity.y -= this.velocity.y * 0.01 * this.dampening * delta;\r\n\r\n\t\tthis.velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\r\n\r\n\t\tthis.direction.z = Number(this.actions.moveForward) - Number(this.actions.moveBackward);\r\n\t\tthis.direction.x = Number(this.actions.moveRight) - Number(this.actions.moveLeft);\r\n\t\tthis.direction.normalize(); // this ensures consistent movements in all directions\r\n\t\tif (this.direction.x != 0 || this.direction.z != 0) {\r\n\t\t\tthis.direction.applyQuaternion(cameraQuat.clone().invert());\r\n\t\t\tthis.direction.y = 0;\r\n\t\t\tthis.direction.normalize();\r\n\t\t\t//if (this.actions.moveForward || this.actions.moveBackward) {\r\n\t\t\tthis.velocity.z -= this.direction.z * this.speed * delta;\r\n\t\t\t//}\r\n\t\t\t//if (this.actions.moveLeft || this.actions.moveRight) {\r\n\t\t\tthis.velocity.x -= this.direction.x * this.speed * delta;\r\n\t\t\t//}\r\n\t\t}\r\n\r\n\r\n\t\tthis.position.x += (-this.velocity.x * delta);\r\n\t\tthis.position.z += (this.velocity.z * delta);\r\n\t\tlet intersection = [];\r\n\t\tlet rayCaster;\r\n\t\tlet blossomCands = this.scene.children.filter((child) => child.name == \"blossom\");\r\n\t\tif (blossomCands.length > 0 &&  this.buffer - (this.velocity.y * delta) > 0) {\r\n\t\t\tlet downOrigin = this.position.clone();\r\n\t\t\tdownOrigin.y = downOrigin.y + this.buffer;\r\n\t\t\trayCaster = new THREE.Raycaster(this.position, new THREE.Vector3(0, -1, 0), 0, this.buffer - (this.velocity.y * delta));\r\n\r\n\t\t\tintersection = rayCaster.intersectObject(blossomCands[0]);\r\n\r\n\t\t}\r\n\r\n\t\tif (intersection.length > 0) {\r\n\t\t\tthis.position.y = intersection[0].point.y + this.buffer;\r\n\t\t\tthis.velocity.y = 0;\r\n\t\t} else {\r\n\t\t\tthis.position.y += (this.velocity.y * delta);\r\n\t\t}\r\n\r\n\t\tif (this.position.y < 0) {\r\n\r\n\t\t\tthis.velocity.y = 0;\r\n\t\t\tthis.position.y = 0;\r\n\r\n\t\t\tthis.actions.canJump = true;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.velocity.clone().length() != 0) {\r\n\t\t\tvar velQuat = new THREE.Quaternion();\r\n\t\t\tvelQuat.setFromUnitVectors(new THREE.Vector3(-1, 0, 0), this.velocity.clone().normalize());\r\n\t\t\tvelQuat.invert();\r\n\t\t\tthis.orientation.slerp(velQuat, 0.25);\r\n\t\t}\r\n\r\n\t\tfor (let mesh of this.meshes) {\r\n\t\t\tmesh.setRotationFromQuaternion(this.orientation);\r\n\t\t\tmesh.position.copy(this.position.clone());\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Player;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Int8Attribute, Vector2, Vector3 } from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\n\r\nclass SceneMap {\r\n\tconstructor(scene) {\r\n\t\tthis.scene = scene;\r\n\r\n\t\tthis.meshes = { stem: undefined, blossom: undefined };\r\n\t\tthis.spawnRegionSize = 12000;\r\n\t\tthis.count = 2000;\r\n\t\tthis.ages = new Float32Array(this.count);\r\n\t\tthis.scales = new Float32Array(this.count);\r\n\t\tthis.phaseSpeed = 0.02;\r\n\t\tthis.maxHeight = 600;\r\n\r\n\t\tconst loader = new GLTFLoader();\r\n\r\n\t\tthis.dummy = new THREE.Object3D();\r\n\t\tthis.dummyPos = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.dummyNorm = new THREE.Vector3(0, 1, 0);\r\n\t\tthis.dummyScale = new THREE.Vector3(1, 1, 1);\r\n\r\n\t\tlet initFunc = this.init.bind(this);\r\n\t\tloader.load('https://threejs.org/examples/models/gltf/Flower/Flower.glb', function (gltf) {\r\n\t\t\tinitFunc(gltf);\r\n\t\t});\r\n\r\n\r\n\t}\r\n\r\n\tinit(gltf) {\r\n\t\tconst _stemMesh = gltf.scene.getObjectByName('Stem');\r\n\t\tconst _blossomMesh = gltf.scene.getObjectByName('Blossom');\r\n\r\n\t\tvar stemGeometry = _stemMesh.geometry.clone();\r\n\t\tvar blossomGeometry = _blossomMesh.geometry.clone();\r\n\r\n\t\tconst defaultTransform = new THREE.Matrix4()\r\n\t\t\t.makeRotationX(Math.PI / 2)\r\n\t\t\t.multiply(new THREE.Matrix4().makeScale(7, 7, 7));\r\n\r\n\t\tstemGeometry.applyMatrix4(defaultTransform);\r\n\t\tblossomGeometry.applyMatrix4(defaultTransform);\r\n\r\n\t\tvar stemMaterial = _stemMesh.material;\r\n\t\tvar blossomMaterial = _blossomMesh.material;\r\n\r\n\t\tthis.meshes[\"stem\"] = new THREE.InstancedMesh(stemGeometry, stemMaterial, this.count);\r\n\t\tthis.meshes[\"blossom\"] = new THREE.InstancedMesh(blossomGeometry, blossomMaterial, this.count);\r\n\r\n\t\t// Assign random colors to the blossoms.\r\n\t\tconst color = new THREE.Color();\r\n\t\tconst blossomPalette = [0xF20587, 0xF2D479, 0xF2C879, 0xF2B077, 0xF24405];\r\n\r\n\t\tfor (let i = 0; i < this.count; i++) {\r\n\r\n\t\t\tcolor.setHex(blossomPalette[Math.floor(Math.random() * blossomPalette.length)]);\r\n\t\t\tthis.meshes[\"blossom\"].setColorAt(i, color);\r\n\r\n\t\t}\r\n\r\n\t\t// Instance matrices will be updated every frame.\r\n\t\tthis.meshes[\"stem\"].instanceMatrix.setUsage(THREE.DynamicDrawUsage);\r\n\t\tthis.meshes[\"blossom\"].instanceMatrix.setUsage(THREE.DynamicDrawUsage);\r\n\r\n\t\tthis.meshes[\"stem\"].name = \"stem\";\r\n\t\tthis.meshes[\"blossom\"].name = \"blossom\";\r\n\t\t\r\n\t\tthis.resample();\r\n\r\n\t\tthis.scene.add(this.meshes[\"stem\"]);\r\n\t\tthis.scene.add(this.meshes[\"blossom\"]);\r\n\t}\r\n\r\n\tresample() {\r\n\r\n\r\n\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\tthis.resampleParticle(i);\r\n\t\t}\r\n\r\n\t\tthis.meshes[\"stem\"].instanceMatrix.needsUpdate = true;\r\n\t\tthis.meshes[\"blossom\"].instanceMatrix.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tresampleParticle(i) {\r\n\t\tthis.ages[i] = Math.random();\r\n\t\tthis.scales[i] = this.scaleCurve(this.ages[i]);\r\n\r\n\t\tthis.dummyPos.x = this.spawnRegionSize * 2 * (Math.random() - 0.5);\r\n\t\tthis.dummyPos.z = this.spawnRegionSize * 2 * (Math.random() - 0.5);\r\n\r\n\t\tthis.dummy.position.copy(this.dummyPos);\r\n\t\tthis.dummy.scale.set(this.scales[i], this.scales[i], this.scales[i]);\r\n\t\tthis.dummy.lookAt(this.dummyNorm);\r\n\t\tthis.dummy.updateMatrix();\r\n\r\n\t\tthis.meshes[\"stem\"].setMatrixAt(i, this.dummy.matrix);\r\n\t\tthis.meshes[\"blossom\"].setMatrixAt(i, this.dummy.matrix);\r\n\r\n\t}\r\n\r\n\tscaleCurve(t) {\r\n\t\treturn this.maxHeight * Math.abs(this.easeOutCubic((t > 0.5 ? 1 - t : t) * 2));\r\n\t};\r\n\r\n\teaseOutCubic(t) {\r\n\t\treturn (--t) * t * t + 1;\r\n\t};\r\n\r\n\tupdateParticle(i, delta) {\r\n\t\tthis.ages[i] += delta * this.phaseSpeed;\r\n\r\n\t\tif (this.ages[i] >= 1) {\r\n\r\n\t\t\tthis.ages[i] = 0.005;\r\n\t\t\tthis.scales[i] = this.scaleCurve(this.ages[i]);\r\n\r\n\t\t\tthis.resampleParticle(i);\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Update scale.\r\n\r\n\t\tconst prevScale = this.scales[i];\r\n\t\tthis.scales[i] = this.scaleCurve(this.ages[i]);\r\n\t\tthis.dummyScale.set(this.scales[i] / prevScale, this.scales[i] / prevScale, this.scales[i] / prevScale);\r\n\r\n\t\t// Update transform.\r\n\r\n\t\tthis.meshes[\"stem\"].getMatrixAt(i, this.dummy.matrix);\r\n\t\tthis.dummy.matrix.scale(this.dummyScale);\r\n\t\tthis.meshes[\"stem\"].setMatrixAt(i, this.dummy.matrix);\r\n\t\tthis.meshes[\"blossom\"].setMatrixAt(i, this.dummy.matrix);\r\n\r\n\t}\r\n\r\n\tupdate(delta) {\r\n\t\tif (this.meshes[\"stem\"] && this.meshes[\"blossom\"]) {\r\n\r\n\t\t\tfor (let i = 0; i < this.count; i++) {\r\n\r\n\t\t\t\tthis.updateParticle(i, delta);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.meshes[\"stem\"].instanceMatrix.needsUpdate = true;\r\n\t\t\tthis.meshes[\"blossom\"].instanceMatrix.needsUpdate = true;\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default SceneMap;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Vector3 } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport Player from \"./Player.js\";\r\nimport SceneMap from \"./SceneMap.js\";\r\n\r\nclass Scene extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t\tthis.start = this.start.bind(this);\r\n\t\tthis.stop = this.stop.bind(this);\r\n\t\tthis.animate = this.animate.bind(this);\r\n\t\tthis.renderScene = this.renderScene.bind(this);\r\n\t\tthis.setupScene = this.setupScene.bind(this);\r\n\t\tthis.destroyContext = this.destroyContext.bind(this);\r\n\t\tthis.handleWindowResize = this.handleWindowResize.bind(this);\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setupScene();\r\n\t}\r\n\r\n\tsetupScene() {\r\n\t\tthis.width = this.container.clientWidth;\r\n\t\tthis.height = this.container.clientHeight;\r\n\r\n\t\tconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\r\n\t\trenderer.shadowMap.enabled = true;\r\n\t\trenderer.gammaOutput = true;\r\n\t\trenderer.gammaFactor = 2.2;\r\n\t\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n\t\tlet scene = new THREE.Scene();\r\n\t\tscene.background = new THREE.Color(0x87CEFA);\r\n\r\n\t\tlet camera = new THREE.PerspectiveCamera(\r\n\t\t\t60,\r\n\t\t\tthis.width / this.height,\r\n\t\t\t0.25,\r\n\t\t\t12000\r\n\t\t);\r\n\t\tscene.add(camera);\r\n\r\n\r\n\t\tthis.renderer = renderer;\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\t\tthis.player = new Player(scene);\r\n\t\tthis.sceneMap = new SceneMap(scene);\r\n\r\n\t\tdocument.addEventListener('keydown', this.player.onKeyDown);\r\n\t\tdocument.addEventListener('keyup', this.player.onKeyUp);\r\n\r\n\t\tvar gridHelper = new THREE.GridHelper(9000, 200);\r\n\t\tscene.add(gridHelper);\r\n\r\n\t\tconst plane = new THREE.Mesh(\r\n\t\t\tnew THREE.PlaneGeometry( 10000, 10000 , 200, 200),\r\n\t\t\tnew THREE.MeshBasicMaterial( { color: 0xffffff, opacity: 1.0, transparent: true } )\r\n\t\t);\r\n\t\tplane.position.y = -0.1;\r\n\t\tplane.rotation.x = - Math.PI / 2;\r\n\t\tscene.add(plane);\r\n\r\n\t\tlet spotLight = new THREE.SpotLight(0xffffff, 0.25);\r\n\t\tspotLight.position.set(45, 50, 15);\r\n\t\tcamera.add(spotLight);\r\n\t\tthis.spotLight = spotLight;\r\n\r\n\t\tlet ambLight = new THREE.AmbientLight(0x333333);\r\n\t\tambLight.position.set(5, 3, 5);\r\n\t\tthis.camera.add(ambLight);\r\n\r\n\t\tthis.camera.lookAt(this.player.position.clone());\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t\tthis.camera.position.z = 100;\r\n\r\n\t\tlet controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\t\tcontrols.enableDamping = true;\r\n\t\tcontrols.dampingFactor = 0.25;\r\n\t\tcontrols.enableZoom = true;\r\n\t\tcontrols.zoomSpeed = 2.1;\r\n\t\tcontrols.enableKeys = false;\r\n\t\tcontrols.screenSpacePanning = false;\r\n\t\tcontrols.enableRotate = true;\r\n\t\t//controls.autoRotate = true;\r\n\t\tcontrols.dampingFactor = 1;\r\n\t\tcontrols.autoRotateSpeed = 1.2;\r\n\t\tcontrols.enablePan = false;\r\n\t\tcontrols.target.copy(this.player.position);\r\n\t\tcontrols.update();\r\n\t\tthis.controls = controls;\r\n\t\tthis.renderer.setSize(this.width, this.height);\r\n\t\tthis.container.appendChild(this.renderer.domElement);\r\n\t\tthis.start();\r\n\t}\r\n\r\n\tstart() {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate);\r\n\t\t}\r\n\t}\r\n\r\n\trenderScene() {\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\t}\r\n\r\n\tanimate() {\r\n\t\tthis.sceneMap.update(0.01);\r\n\t\tthis.frameId = requestAnimationFrame(this.animate);\r\n\t\tthis.controls.update();\r\n\t\tlet oldPos = this.player.position.clone();\r\n\t\tthis.player.update(0.01, true, this.camera.quaternion);\r\n\t\tlet delta = this.player.position.clone().sub(oldPos);\r\n\t\tthis.controls.target.copy(this.player.position);\r\n\t\tthis.camera.position.addVectors(this.camera.position, delta);\r\n\r\n\t\t//this.camera.lookAt(this.player.position);\r\n\r\n\t\tthis.renderScene();\r\n\t}\r\n\r\n\tstop() {\r\n\t\tcancelAnimationFrame(this.frameId);\r\n\t}\r\n\r\n\thandleWindowResize() {\r\n\t\tlet width = window.innerWidth;\r\n\t\tlet height = window.innerHeight;\r\n\t\tthis.camera.aspect = width / height;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.stop();\r\n\t\tthis.destroyContext();\r\n\t}\r\n\r\n\tdestroyContext() {\r\n\t\tthis.container.removeChild(this.renderer.domElement);\r\n\t\tthis.renderer.forceContextLoss();\r\n\t\tthis.renderer.context = null;\r\n\t\tthis.renderer.domElement = null;\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst width = \"100%\";\r\n\t\tconst height = \"100%\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={(container) => {\r\n\t\t\t\t\tthis.container = container;\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height,\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t}}></div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Scene;\r\n","import React, { Component } from 'react';\r\nimport Scene from './Scene';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Scene />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}