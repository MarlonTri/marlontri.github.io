{"version":3,"sources":["Player.js","SceneMap.js","Loader.js","Scene.js","App.js","serviceWorker.js","index.js"],"names":["Player","scene","resDict","Object","classCallCheck","this","onKeyDown","bind","onKeyUp","buffer","velocity","THREE","position","direction","orientation","actions","moveForward","moveBackward","moveLeft","moveRight","canJump","dampening","speed","parent","add","rotateOnAxis","event","code","y","console","log","delta","onObject","cameraQuat","x","z","Number","normalize","applyQuaternion","clone","invert","intersection","blossomCands","children","filter","child","name","length","downOrigin","intersectObject","point","lerp","velQuat","setFromUnitVectors","multiply","setFromQuaternion","lookAt","sub","copy","SceneMap","meshes","stem","undefined","blossom","spawnRegionSize","count","ages","Float32Array","scales","phaseSpeed","maxHeight","dummy","dummyPos","dummyNorm","dummyScale","init","gltf","_stemMesh","getObjectByName","_blossomMesh","stemGeometry","geometry","blossomGeometry","defaultTransform","makeRotationX","Math","PI","makeScale","applyMatrix4","stemMaterial","material","blossomMaterial","color","opacity","transparent","blossomPalette","i","setHex","floor","random","setColorAt","instanceMatrix","setUsage","resample","resampleParticle","needsUpdate","scaleCurve","scale","set","updateMatrix","setMatrixAt","matrix","t","abs","easeOutCubic","prevScale","getMatrixAt","updateParticle","Loader","resourcesDict","_this","promises","_loop","_ref","_Object$entries","_i","resName","_ref2","slicedToArray","p","loadGLTF","loadRGBE","loadCube","push","then","val","entries","Promise","all","url","resolve","GLTFLoader","load","RGBELoader","path","urls","loader","setPath","Scene","props","possibleConstructorReturn","getPrototypeOf","call","state","spider","type","texCube","flower","loadPromise","res","start","assertThisInitialized","stop","animate","renderScene","setupScene","destroyContext","handleWindowResize","window","addEventListener","_this2","width","container","clientWidth","height","clientHeight","renderer","antialias","setPixelRatio","devicePixelRatio","shadowMap","enabled","gammaOutput","gammaFactor","camera","player","sceneMap","document","gridHelper","textureLoader","plane","specular","map","specularMap","normalMap","shininess","encoding","background","rotation","ambLight","updateProjectionMatrix","controls","OrbitControls","domElement","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableKeys","screenSpacePanning","enableRotate","autoRotateSpeed","enablePan","target","update","setSize","appendChild","frameId","requestAnimationFrame","render","oldPos","quaternion","addVectors","cancelAnimationFrame","innerWidth","innerHeight","aspect","removeChild","forceContextLoss","context","_this3","react_default","a","createElement","ref","style","overflow","Component","App","src_Scene","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b2b13511.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Vector2, Vector3 } from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { loadModel } from \"./Utils.js\";\r\n\r\nclass Player {\r\n\tconstructor(scene, resDict) {\r\n\r\n\t\tthis.scene = scene;\r\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\r\n\t\tthis.onKeyUp = this.onKeyUp.bind(this);\r\n\t\tthis.buffer = 3;\r\n\r\n\t\tthis.velocity = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.position = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.direction = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.orientation = new THREE.Vector3(-1, 0, 0);\r\n\t\tthis.actions = {\r\n\t\t\tmoveForward: false,\r\n\t\t\tmoveBackward: false,\r\n\t\t\tmoveLeft: false,\r\n\t\t\tmoveRight: false,\r\n\t\t\tcanJump: false\r\n\t\t};\r\n\r\n\t\tthis.dampening = 40;\r\n\t\tthis.speed = 10000;\r\n\r\n\t\tthis.parent = new THREE.Object3D();\r\n\t\t/* \t\tlet sphere = new THREE.SphereGeometry(50, 300, 300);\r\n\t\t\t\tlet material = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\tmap: new THREE.TextureLoader().load(\"/Assets/2_no_clouds_4k.jpg\"),\r\n\t\t\t\t\tbumpMap: new THREE.TextureLoader().load(\"/Assets/elev_bump_4k.jpg\"),\r\n\t\t\t\t\tbumpScale: 0.005,\r\n\t\t\t\t\tspecularMap: THREE.ImageUtils.loadTexture(\"/Assets/water_4k.png\"),\r\n\t\t\t\t\tspecular: new THREE.Color(\"grey\"),\r\n\t\t\t\t});\r\n\t\t\t\tlet mesh = new THREE.Mesh(sphere, material);\r\n\t\t\r\n\t\t\t\tthis.meshes.push(mesh);\r\n\t\t\t\tscene.add(mesh);\r\n\t\t\t\tsphere = new THREE.SphereGeometry(50.1, 300, 300);\r\n\t\t\t\tmaterial = new THREE.MeshPhongMaterial({\r\n\t\t\t\t\tmap: new THREE.TextureLoader().load(\"/Assets/fair_clouds_4k.png\"),\r\n\t\t\t\t\ttransparent: true,\r\n\t\t\t\t});\r\n\t\t\t\tmesh = new THREE.Mesh(sphere, material);\r\n\t\t\t\tthis.meshes.push(mesh);\r\n\t\t\t\tscene.add(mesh); */\r\n\t\tthis.parent.add(resDict[\"spider\"][\"val\"].scene)\r\n\t\tresDict[\"spider\"][\"val\"].scene.rotateOnAxis(new THREE.Vector3(0, 1, 0), 3.1415 / 2);\r\n\t\tscene.add(this.parent);\r\n\r\n\t}\r\n\r\n\tonKeyDown(event) {\r\n\r\n\t\tswitch (event.code) {\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\tcase 'KeyW':\r\n\t\t\t\tthis.actions.moveForward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'KeyA':\r\n\t\t\t\tthis.actions.moveLeft = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\tcase 'KeyS':\r\n\t\t\t\tthis.actions.moveBackward = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\tcase 'KeyD':\r\n\t\t\t\tthis.actions.moveRight = true;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Space':\r\n\t\t\t\tif (this.actions.canJump === true) {\r\n\t\t\t\t\tthis.velocity.y += 200;\r\n\t\t\t\t}\r\n\t\t\t\t//this.actions.canJump = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Unknown key input: \" + event.code);\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tonKeyUp(event) {\r\n\r\n\t\tswitch (event.code) {\r\n\r\n\t\t\tcase 'ArrowUp':\r\n\t\t\tcase 'KeyW':\r\n\t\t\t\tthis.actions.moveForward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowLeft':\r\n\t\t\tcase 'KeyA':\r\n\t\t\t\tthis.actions.moveLeft = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowDown':\r\n\t\t\tcase 'KeyS':\r\n\t\t\t\tthis.actions.moveBackward = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ArrowRight':\r\n\t\t\tcase 'KeyD':\r\n\t\t\t\tthis.actions.moveRight = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\"Unknown key input: \" + event.code);\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate(delta, onObject, cameraQuat) {\r\n\t\tthis.velocity.x -= this.velocity.x * this.dampening * delta;\r\n\t\tthis.velocity.z -= this.velocity.z * this.dampening * delta;\r\n\t\tthis.velocity.y -= this.velocity.y * 0.01 * this.dampening * delta;\r\n\r\n\t\tthis.velocity.y -= 9.8 * 100.0 * delta; // 100.0 = mass\r\n\r\n\t\tthis.direction.z = Number(this.actions.moveForward) - Number(this.actions.moveBackward);\r\n\t\tthis.direction.x = Number(this.actions.moveRight) - Number(this.actions.moveLeft);\r\n\t\tthis.direction.normalize(); // this ensures consistent movements in all directions\r\n\t\tif (this.direction.x != 0 || this.direction.z != 0) {\r\n\t\t\tthis.direction.applyQuaternion(cameraQuat.clone().invert());\r\n\t\t\tthis.direction.y = 0;\r\n\t\t\tthis.direction.normalize();\r\n\t\t\t//if (this.actions.moveForward || this.actions.moveBackward) {\r\n\t\t\tthis.velocity.z -= this.direction.z * this.speed * delta;\r\n\t\t\t//}\r\n\t\t\t//if (this.actions.moveLeft || this.actions.moveRight) {\r\n\t\t\tthis.velocity.x -= this.direction.x * this.speed * delta;\r\n\t\t\t//}\r\n\t\t}\r\n\r\n\r\n\t\tthis.position.x += (-this.velocity.x * delta);\r\n\t\tthis.position.z += (this.velocity.z * delta);\r\n\t\tlet intersection = [];\r\n\t\tlet rayCaster;\r\n\t\tlet blossomCands = this.scene.children.filter((child) => child.name == \"blossom\");\r\n\t\tif (blossomCands.length > 0 && this.buffer - (this.velocity.y * delta) > 0) {\r\n\t\t\tlet downOrigin = this.position.clone();\r\n\t\t\tdownOrigin.y = downOrigin.y;\r\n\t\t\trayCaster = new THREE.Raycaster(this.position, new THREE.Vector3(0, -1, 0), 0, this.buffer - (this.velocity.y * delta));\r\n\r\n\t\t\tintersection = rayCaster.intersectObject(blossomCands[0]);\r\n\r\n\t\t}\r\n\r\n\t\tif (intersection.length > 0) {\r\n\t\t\tthis.position.y = intersection[0].point.y + this.buffer;\r\n\t\t\tthis.velocity.y = 0;\r\n\t\t} else {\r\n\t\t\tthis.position.y += (this.velocity.y * delta);\r\n\t\t}\r\n\r\n\t\tif (this.position.y < 0) {\r\n\r\n\t\t\tthis.velocity.y = 0;\r\n\t\t\tthis.position.y = 0;\r\n\r\n\t\t\tthis.actions.canJump = true;\r\n\r\n\t\t}\r\n\r\n\t\tlet clone = this.velocity.clone();\r\n\t\tclone.x = -clone.x;\r\n\t\tif (clone.length() != 0) {\r\n\t\t\tclone.y = clone.y / 2;\r\n\t\t\tthis.orientation.lerp(clone.normalize(), 0.131);\r\n\t\t\tthis.orientation.normalize();\r\n\t\t}\r\n\r\n\t\tlet velQuat = new THREE.Quaternion();\r\n\t\tvelQuat.setFromUnitVectors(this.orientation, new THREE.Vector3(0, -1, 0));\r\n\t\tvelQuat.multiply((new THREE.Quaternion()).setFromUnitVectors(new THREE.Vector3(0, -1, 0), new THREE.Vector3(-1, 0, 0)));\r\n\t\tlet velEul = new THREE.Euler();\r\n\t\tvelEul.setFromQuaternion(velQuat);\r\n\t\tthis.parent.lookAt(this.parent.position.clone().sub(this.orientation));\r\n\t\tthis.parent.position.copy(this.position.clone());\r\n\t}\r\n}\r\n\r\nexport default Player;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Int8Attribute, Vector2, Vector3 } from \"three\";\r\n\r\nclass SceneMap {\r\n\tconstructor(scene, resDict) {\r\n\t\tthis.scene = scene;\r\n\r\n\t\tthis.meshes = { stem: undefined, blossom: undefined };\r\n\t\tthis.spawnRegionSize = 12000;\r\n\t\tthis.count = 2000;\r\n\t\tthis.ages = new Float32Array(this.count);\r\n\t\tthis.scales = new Float32Array(this.count);\r\n\t\tthis.phaseSpeed = 0.02;\r\n\t\tthis.maxHeight = 600;\r\n\r\n\r\n\t\tthis.dummy = new THREE.Object3D();\r\n\t\tthis.dummyPos = new THREE.Vector3(0, 0, 0);\r\n\t\tthis.dummyNorm = new THREE.Vector3(0, 1, 0);\r\n\t\tthis.dummyScale = new THREE.Vector3(1, 1, 1);\r\n\r\n\t\tthis.init(resDict[\"flower\"][\"val\"]);\r\n\t}\r\n\r\n\tinit(gltf) {\r\n\t\tconst _stemMesh = gltf.scene.getObjectByName('Stem');\r\n\t\tconst _blossomMesh = gltf.scene.getObjectByName('Blossom');\r\n\r\n\t\tvar stemGeometry = _stemMesh.geometry.clone();\r\n\t\tvar blossomGeometry = _blossomMesh.geometry.clone();\r\n\r\n\t\tconst defaultTransform = new THREE.Matrix4()\r\n\t\t\t.makeRotationX(Math.PI / 2)\r\n\t\t\t.multiply(new THREE.Matrix4().makeScale(7, 7, 7));\r\n\r\n\t\tstemGeometry.applyMatrix4(defaultTransform);\r\n\t\tblossomGeometry.applyMatrix4(defaultTransform);\r\n\r\n\t\tlet stemMaterial = _stemMesh.material;\r\n\t\tlet blossomMaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF, opacity: 0.9, transparent: true });\r\n\r\n\t\tthis.meshes[\"stem\"] = new THREE.InstancedMesh(stemGeometry, stemMaterial, this.count);\r\n\t\tthis.meshes[\"blossom\"] = new THREE.InstancedMesh(blossomGeometry, blossomMaterial, this.count);\r\n\r\n\t\t// Assign random colors to the blossoms.\r\n\t\tconst color = new THREE.Color();\r\n\t\tconst blossomPalette = [0xF20587, 0xF2D479, 0xF2C879, 0xF2B077, 0xF24405];\r\n\r\n\t\tfor (let i = 0; i < this.count; i++) {\r\n\r\n\t\t\tcolor.setHex(blossomPalette[Math.floor(Math.random() * blossomPalette.length)]);\r\n\t\t\tthis.meshes[\"blossom\"].setColorAt(i, color);\r\n\r\n\t\t}\r\n\r\n\t\t// Instance matrices will be updated every frame.\r\n\t\tthis.meshes[\"stem\"].instanceMatrix.setUsage(THREE.DynamicDrawUsage);\r\n\t\tthis.meshes[\"blossom\"].instanceMatrix.setUsage(THREE.DynamicDrawUsage);\r\n\r\n\t\tthis.meshes[\"stem\"].name = \"stem\";\r\n\t\tthis.meshes[\"blossom\"].name = \"blossom\";\r\n\r\n\t\tthis.resample();\r\n\r\n\t\tthis.scene.add(this.meshes[\"stem\"]);\r\n\t\tthis.scene.add(this.meshes[\"blossom\"]);\r\n\t}\r\n\r\n\tresample() {\r\n\r\n\r\n\t\tfor (let i = 0; i < this.count; i++) {\r\n\t\t\tthis.resampleParticle(i);\r\n\t\t}\r\n\r\n\t\tthis.meshes[\"stem\"].instanceMatrix.needsUpdate = true;\r\n\t\tthis.meshes[\"blossom\"].instanceMatrix.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tresampleParticle(i) {\r\n\t\tthis.ages[i] = Math.random();\r\n\t\tthis.scales[i] = this.scaleCurve(this.ages[i]);\r\n\r\n\t\tthis.dummyPos.x = this.spawnRegionSize * 2 * (Math.random() - 0.5);\r\n\t\tthis.dummyPos.z = this.spawnRegionSize * 2 * (Math.random() - 0.5);\r\n\r\n\t\tthis.dummy.position.copy(this.dummyPos);\r\n\t\tthis.dummy.scale.set(this.scales[i], this.scales[i], this.scales[i]);\r\n\t\tthis.dummy.lookAt(this.dummyNorm);\r\n\t\tthis.dummy.updateMatrix();\r\n\r\n\t\tthis.meshes[\"stem\"].setMatrixAt(i, this.dummy.matrix);\r\n\t\tthis.meshes[\"blossom\"].setMatrixAt(i, this.dummy.matrix);\r\n\r\n\t}\r\n\r\n\tscaleCurve(t) {\r\n\t\treturn this.maxHeight * Math.abs(this.easeOutCubic((t > 0.5 ? 1 - t : t) * 2));\r\n\t};\r\n\r\n\teaseOutCubic(t) {\r\n\t\treturn (--t) * t * t + 1;\r\n\t};\r\n\r\n\tupdateParticle(i, delta) {\r\n\t\tthis.ages[i] += delta * this.phaseSpeed;\r\n\r\n\t\tif (this.ages[i] >= 1) {\r\n\r\n\t\t\tthis.ages[i] = 0.005;\r\n\t\t\tthis.scales[i] = this.scaleCurve(this.ages[i]);\r\n\r\n\t\t\tthis.resampleParticle(i);\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Update scale.\r\n\r\n\t\tconst prevScale = this.scales[i];\r\n\t\tthis.scales[i] = this.scaleCurve(this.ages[i]);\r\n\t\tthis.dummyScale.set(this.scales[i] / prevScale, this.scales[i] / prevScale, this.scales[i] / prevScale);\r\n\r\n\t\t// Update transform.\r\n\r\n\t\tthis.meshes[\"stem\"].getMatrixAt(i, this.dummy.matrix);\r\n\t\tthis.dummy.matrix.scale(this.dummyScale);\r\n\t\tthis.meshes[\"stem\"].setMatrixAt(i, this.dummy.matrix);\r\n\t\tthis.meshes[\"blossom\"].setMatrixAt(i, this.dummy.matrix);\r\n\r\n\t}\r\n\r\n\tupdate(delta) {\r\n\t\tif (this.meshes[\"stem\"] && this.meshes[\"blossom\"]) {\r\n\r\n\t\t\tfor (let i = 0; i < this.count; i++) {\r\n\r\n\t\t\t\tthis.updateParticle(i, delta);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.meshes[\"stem\"].instanceMatrix.needsUpdate = true;\r\n\t\t\tthis.meshes[\"blossom\"].instanceMatrix.needsUpdate = true;\r\n\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default SceneMap;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\";\r\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader.js\";\r\n\r\nclass Loader {\r\n\tconstructor(resourcesDict) {\r\n\r\n\t\tthis.promises = [];\r\n\r\n\t\tfor (let [resName, resDict] of Object.entries(resourcesDict)) {\r\n\t\t\tlet p;\r\n\t\t\tswitch (resDict[\"type\"]) {\r\n\t\t\t\tcase 'GLTF':\r\n\t\t\t\t\tp = this.loadGLTF(resDict[\"url\"]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'RGBE':\r\n\t\t\t\t\tp = this.loadRGBE(resDict[\"url\"]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Cube':\r\n\t\t\t\t\tp = this.loadCube(resDict[\"path\"], resDict[\"urls\"]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(\"ERROR: unknown import type - \" + resDict[\"type\"]);\r\n\t\t\t}\r\n\t\t\tthis.promises.push(p.then((val) => {\r\n\t\t\t\tresDict[\"val\"] = val;\r\n\t\t\t\tresDict[\"confirm\"] = \"Confirmed - \" + resName;\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\treturn Promise.all(this.promises);\r\n\r\n\t}\r\n\r\n\tloadGLTF(url) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tnew GLTFLoader().load(url, resolve);\r\n\t\t});\r\n\t}\r\n\r\n\tloadRGBE(url) {\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tnew RGBELoader().load(url, resolve);\r\n\t\t});\r\n\t}\r\n\r\n\tloadCube(path, urls) {\r\n\t\tconst loader = new THREE.CubeTextureLoader();\r\n\t\tloader.setPath(path);\r\n\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tloader.load(urls, resolve);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport default Loader;","import React, { Component } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Vector3 } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport Player from \"./Player.js\";\r\nimport SceneMap from \"./SceneMap.js\";\r\nimport { loadCube } from \"./Utils.js\";\r\nimport Loader from \"./Loader.js\";\r\n\r\nclass Scene extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\r\n\t\tthis.resDict = {\r\n\t\t\t\"spider\": {\r\n\t\t\t\t\"type\": \"GLTF\",\r\n\t\t\t\t\"url\": \"/Assets/spider.gltf\"\r\n\t\t\t},\r\n\t\t\t\"texCube\": {\r\n\t\t\t\t\"type\": \"Cube\",\r\n\t\t\t\t\"path\": 'https://threejs.org/examples/textures/cube/Bridge2/',\r\n\t\t\t\t\"urls\": ['posx.jpg', 'negx.jpg', 'posy.jpg', 'negy.jpg', 'posz.jpg', 'negz.jpg']\r\n\t\t\t},\r\n\t\t\t\"flower\": {\r\n\t\t\t\t\"type\": \"GLTF\",\r\n\t\t\t\t\"url\": \"https://threejs.org/examples/models/gltf/Flower/Flower.glb\"\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.loadPromise = new Loader(this.resDict).then(\r\n\t\t\t(res) => { console.log(\"INFO: All assets loaded!\") }\r\n\t\t);\r\n\r\n\t\tthis.start = this.start.bind(this);\r\n\t\tthis.stop = this.stop.bind(this);\r\n\t\tthis.animate = this.animate.bind(this);\r\n\t\tthis.renderScene = this.renderScene.bind(this);\r\n\t\tthis.setupScene = this.setupScene.bind(this);\r\n\t\tthis.destroyContext = this.destroyContext.bind(this);\r\n\t\tthis.handleWindowResize = this.handleWindowResize.bind(this);\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\twindow.addEventListener(\"resize\", this.handleWindowResize);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadPromise.then(() => { this.setupScene() });\r\n\t}\r\n\r\n\tsetupScene() {\r\n\t\tthis.width = this.container.clientWidth;\r\n\t\tthis.height = this.container.clientHeight;\r\n\r\n\t\tconst renderer = new THREE.WebGLRenderer({ antialias: true });\r\n\t\trenderer.setPixelRatio(window.devicePixelRatio);\r\n\t\trenderer.shadowMap.enabled = true;\r\n\t\trenderer.gammaOutput = true;\r\n\t\trenderer.gammaFactor = 2.2;\r\n\t\trenderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n\r\n\t\tlet scene = new THREE.Scene();\r\n\r\n\t\tlet camera = new THREE.PerspectiveCamera(\r\n\t\t\t60,\r\n\t\t\tthis.width / this.height,\r\n\t\t\t0.25,\r\n\t\t\t12000\r\n\t\t);\r\n\t\tscene.add(camera);\r\n\r\n\t\tthis.renderer = renderer;\r\n\t\tthis.scene = scene;\r\n\t\tthis.camera = camera;\r\n\t\tthis.player = new Player(scene, this.resDict);\r\n\t\tlet sceneMap = new SceneMap(scene, this.resDict);\r\n\t\tthis.sceneMap = sceneMap;\r\n\r\n\t\tdocument.addEventListener('keydown', this.player.onKeyDown);\r\n\t\tdocument.addEventListener('keyup', this.player.onKeyUp);\r\n\r\n\t\tvar gridHelper = new THREE.GridHelper(9000, 200);\r\n\t\tgridHelper.position.y = 2;\r\n\t\tscene.add(gridHelper);\r\n\t\tlet textureLoader = new THREE.TextureLoader();\r\n\t\tconst plane = new THREE.Mesh(\r\n\t\t\tnew THREE.PlaneGeometry(10000, 10000, 200, 200),\r\n\t\t\tnew THREE.MeshPhongMaterial({\r\n\t\t\t\tspecular: 0x111111,\r\n\t\t\t\tmap: textureLoader.load('https://threejs.org/examples/models/gltf/LeePerrySmith/Map-COL.jpg'),\r\n\t\t\t\tspecularMap: textureLoader.load('https://threejs.org/examples/models/gltf/LeePerrySmith/Map-SPEC.jpg'),\r\n\t\t\t\tnormalMap: textureLoader.load('https://threejs.org/examples/models/gltf/LeePerrySmith/Infinite-Level_02_Tangent_SmoothUV.jpg'),\r\n\t\t\t\tshininess: 25\r\n\t\t\t})\r\n\t\t);\r\n\r\n\r\n\t\tlet texCube = this.resDict[\"texCube\"][\"val\"];\r\n\t\ttexCube.encoding = THREE.sRGBEncoding;\r\n\t\tscene.background = texCube;\r\n\r\n\t\tplane.position.y = -0.1;\r\n\t\tplane.rotation.x = - Math.PI / 2;\r\n\t\tscene.add(plane);\r\n\r\n\t\tlet spotLight = new THREE.SpotLight(0xffffff, 0.25);\r\n\t\tspotLight.position.set(45, 50, 15);\r\n\t\t//camera.add(spotLight);\r\n\t\t//this.spotLight = spotLight;\r\n\r\n\t\tlet ambLight = new THREE.AmbientLight(0x333333);\r\n\t\tambLight.position.set(5, 3, 5);\r\n\t\tthis.camera.add(ambLight);\r\n\r\n\t\tthis.camera.lookAt(this.player.position.clone());\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t\tthis.camera.position.z = 100;\r\n\r\n\t\tlet controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\t\tcontrols.enableDamping = true;\r\n\t\tcontrols.dampingFactor = 0.25;\r\n\t\tcontrols.enableZoom = true;\r\n\t\tcontrols.zoomSpeed = 2.1;\r\n\t\tcontrols.enableKeys = false;\r\n\t\tcontrols.screenSpacePanning = false;\r\n\t\tcontrols.enableRotate = true;\r\n\t\t//controls.autoRotate = true;\r\n\t\tcontrols.dampingFactor = 1;\r\n\t\tcontrols.autoRotateSpeed = 1.2;\r\n\t\tcontrols.enablePan = false;\r\n\t\tcontrols.target.copy(this.player.position);\r\n\t\tcontrols.update();\r\n\t\tthis.controls = controls;\r\n\t\tthis.renderer.setSize(this.width, this.height);\r\n\t\tthis.container.appendChild(this.renderer.domElement);\r\n\t\tthis.start();\r\n\t}\r\n\r\n\tstart() {\r\n\t\tif (!this.frameId) {\r\n\t\t\tthis.frameId = requestAnimationFrame(this.animate);\r\n\t\t}\r\n\t}\r\n\r\n\trenderScene() {\r\n\t\tthis.renderer.render(this.scene, this.camera);\r\n\t}\r\n\r\n\tanimate() {\r\n\t\tthis.sceneMap.update(0.01);\r\n\t\tthis.frameId = requestAnimationFrame(this.animate);\r\n\t\tthis.controls.update();\r\n\t\tlet oldPos = this.player.position.clone();\r\n\t\tthis.player.update(0.01, true, this.camera.quaternion);\r\n\t\tlet delta = this.player.position.clone().sub(oldPos);\r\n\t\tthis.controls.target.copy(this.player.position);\r\n\t\tthis.camera.position.addVectors(this.camera.position, delta);\r\n\r\n\t\t//this.camera.lookAt(this.player.position);\r\n\r\n\t\tthis.renderScene();\r\n\t}\r\n\r\n\tstop() {\r\n\t\tcancelAnimationFrame(this.frameId);\r\n\t}\r\n\r\n\thandleWindowResize() {\r\n\t\tlet width = window.innerWidth;\r\n\t\tlet height = window.innerHeight;\r\n\t\tthis.camera.aspect = width / height;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.stop();\r\n\t\tthis.destroyContext();\r\n\t}\r\n\r\n\tdestroyContext() {\r\n\t\tthis.container.removeChild(this.renderer.domElement);\r\n\t\tthis.renderer.forceContextLoss();\r\n\t\tthis.renderer.context = null;\r\n\t\tthis.renderer.domElement = null;\r\n\t\tthis.renderer = null;\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst width = \"100%\";\r\n\t\tconst height = \"100%\";\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tref={(container) => {\r\n\t\t\t\t\tthis.container = container;\r\n\t\t\t\t}}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: width,\r\n\t\t\t\t\theight: height,\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\toverflow: \"hidden\",\r\n\t\t\t\t}}></div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Scene;\r\n","import React, { Component } from 'react';\r\nimport Scene from './Scene';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Scene />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}