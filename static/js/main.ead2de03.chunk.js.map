{"version":3,"sources":["threejs/ThreeEntryPoint.js","components/ThreeContainer.js","App.js","serviceWorker.js","index.js"],"names":["ThreeEntryPoint","sceneRef","renderer","THREE","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","appendChild","domElement","camera","ready","position","set","rotation","y","Math","PI","x","mesh","controls","FirstPersonControls","movementSpeed","lookSpeed","character","MD2CharacterComplex","scale","geometry","worldWidth","worldDepth","clock","scene","addLight","color","intensity","light","add","target","background","fog","progressbarElem","document","querySelector","itemsLoaded","style","width","stats","Stats","dom","baseCharacter","animate","raycaster","root","intersects","intersectObject","point","delta","getDelta","update","render","requestAnimationFrame","onLoadComplete","cloneCharacter","shareParts","enableShadows","setWeapon","setSkin","z","display","loadParts","baseUrl","body","skins","weapons","animations","move","idle","jump","attack","crouchMove","crouchIdle","crouchAttach","walkSpeed","crouchSpeed","data","height","seed","random","sin","floor","size","Uint8Array","perlin","ImprovedNoise","quality","j","i","abs","noise","generateHeight","rotateX","vertices","l","length","at","texture","context","image","imageData","vector3","sun","normalize","canvas","createElement","getContext","fillStyle","fillRect","getImageData","dot","shade","putImageData","canvasScaled","drawImage","v","generateTexture","wrapS","wrapT","map","init","ThreeContainer","this","id","class","ref","element","Component","App","Boolean","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.ead2de03.chunk.js","sourcesContent":["// Three.js - Game - Load Models\r\n// from https://threejsfundamentals.org/threejs/threejs-game-load-models.html\r\n\r\n\r\nimport * as THREE from 'three';\r\nimport Stats from 'three/examples/jsm/libs/stats.module.js';\r\nimport { FirstPersonControls } from 'three/examples/jsm/controls/FirstPersonControls.js';\r\nimport { ImprovedNoise } from 'three/examples/jsm/math/ImprovedNoise.js';\r\nimport { MD2CharacterComplex } from 'three/examples/jsm/misc/MD2CharacterComplex.js';\r\n\r\nexport default function ThreeEntryPoint(sceneRef) {\r\n            \r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    sceneRef.appendChild(renderer.domElement);\r\n    const fov = 45;\r\n    const aspect = 2; // the sceneRef default\r\n    const near = 0.1;\r\n    const far = 8000;\r\n    const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n    let ready = false;\r\n    camera.position.set( 0, 20, -60 );\r\n    camera.rotation.y = Math.PI;\r\n    camera.rotation.x = .1; \r\n    \r\n    // CONTROLS\r\n    \r\n\r\n    const configOgro = {\r\n\t\t\t\t\t\r\n        baseUrl: \"https://threejs.org/examples/models/md2/ogro/\",\r\n        body: \"ogro.md2\",\r\n        \r\n        skins: [\"grok.jpg\", \"ogrobase.png\", \"arboshak.png\", \"ctf_r.png\", \"ctf_b.png\", \"darkam.png\", \"freedom.png\",\r\n            \"gib.png\", \"gordogh.png\", \"igdosh.png\", \"khorne.png\", \"nabogro.png\",\r\n            \"sharokh.png\"],\r\n        weapons: [[\"weapon.md2\", \"weapon.jpg\"]],\r\n        animations: {\r\n            move: \"run\",\r\n            idle: \"stand\",\r\n            jump: \"jump\",\r\n            attack: \"attack\",\r\n            crouchMove: \"cwalk\",\r\n            crouchIdle: \"cstand\",\r\n            crouchAttach: \"crattack\"\r\n        },\r\n\r\n        walkSpeed: 200,\r\n        crouchSpeed: 175\r\n\r\n    };\r\n    let mesh;\r\n    const controls = new FirstPersonControls(camera, renderer.domElement);\r\n    controls.movementSpeed = 3000;\r\n    controls.lookSpeed = 0.1;\r\n    \r\n    const character = new MD2CharacterComplex();\r\n    character.scale = .4;\r\n    character.controls = controls;\r\n        \r\n    const worldWidth = 256, worldDepth = 256;\r\n    const geometry = new THREE.PlaneGeometry(3500, 3500, worldWidth - 1, worldDepth - 1);\r\n\tconst clock = new THREE.Clock();\r\n\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0xefd1b5);\r\n    scene.fog = new THREE.FogExp2(0xefd1b5, 0.00025);\r\n    //scene.add( cameraRig );\r\n\r\n    function addLight(...pos) {\r\n        const color = 0xFFFFFF;\r\n        const intensity = 1;\r\n        const light = new THREE.DirectionalLight(color, intensity);\r\n        light.position.set(...pos);\r\n        scene.add(light);\r\n        scene.add(light.target);\r\n    }\r\n    addLight(5, 5, 2);\r\n    addLight(-5, 5, 5);\r\n\r\n\r\n    const progressbarElem = document.querySelector('#progressbar');\r\n    const itemsTotal = 2;\r\n    let itemsLoaded = 0;\r\n    progressbarElem.style.width = `${itemsLoaded / itemsTotal * 100 | 0}%`;\r\n    \r\n    \r\n    const stats = new Stats();\r\n    sceneRef.appendChild(stats.dom);\r\n    \r\n    const baseCharacter = new MD2CharacterComplex();\r\n    baseCharacter.scale = .04;\r\n\r\n    baseCharacter.onLoadComplete = function () {\r\n\r\n        const cloneCharacter = character;\r\n\r\n        cloneCharacter.shareParts(baseCharacter);\r\n\r\n        // cast and receive shadows\r\n        cloneCharacter.enableShadows(true);\r\n\r\n        cloneCharacter.setWeapon(0);\r\n        cloneCharacter.setSkin(0);\r\n\r\n        cloneCharacter.root.position.x = 0;\r\n        cloneCharacter.root.position.z = 0;\r\n\r\n        scene.add(cloneCharacter.root);\r\n\r\n        //const gyro = new Gyroscope();\r\n        //gyro.add(camera);\r\n        //gyro.add(light, light.target);\r\n\r\n        character.root.add(camera);\r\n        \r\n        const loadingElem = document.querySelector('#loading');\r\n        loadingElem.style.display = 'none';\r\n        ready = true;\r\n        requestAnimationFrame(animate);\r\n\r\n    };\r\n\r\n    baseCharacter.loadParts(configOgro);\r\n\r\n    function init() {    \r\n       \r\n        \r\n        const data = generateHeight(worldWidth, worldDepth);\r\n\r\n        geometry.rotateX( - Math.PI / 2);\r\n\r\n        const vertices = geometry.vertices;\r\n\r\n        for (let i = 0, l = vertices.length; i < l; i++) {\r\n            vertices.at(i).y = data[i] * 1.3;\r\n        }\r\n\r\n        const texture = new THREE.CanvasTexture(generateTexture(data, worldWidth, worldDepth));\r\n        texture.wrapS = THREE.ClampToEdgeWrapping;\r\n        texture.wrapT = THREE.ClampToEdgeWrapping;\r\n\r\n        mesh = new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ map: texture }));\r\n        scene.add(mesh);\r\n        \r\n        itemsLoaded += 1;\r\n        \r\n    }\r\n\r\n    function generateTexture(data, width, height) {\r\n\r\n        let context,\r\n        image,\r\n        imageData,\r\n        shade;\r\n\r\n        const vector3 = new THREE.Vector3(0, 0, 0);\r\n\r\n        const sun = new THREE.Vector3(1, 1, 1);\r\n        sun.normalize();\r\n\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n\r\n        context = canvas.getContext('2d');\r\n        context.fillStyle = '#000';\r\n        context.fillRect(0, 0, width, height);\r\n\r\n        image = context.getImageData(0, 0, canvas.width, canvas.height);\r\n        imageData = image.data;\r\n\r\n        for (let i = 0, j = 0, l = imageData.length; i < l; i += 4, j++) {\r\n\r\n            vector3.x = data[j - 2] - data[j + 2];\r\n            vector3.y = 2;\r\n            vector3.z = data[j - width * 2] - data[j + width * 2];\r\n            vector3.normalize();\r\n\r\n            shade = vector3.dot(sun);\r\n            shade = 1;\r\n\r\n            imageData[i] = (96 + shade * 128) * (0.5 + data[j] * 0.007);\r\n            imageData[i + 1] = (32 + shade * 96) * (0.5 + data[j] * 0.007);\r\n            imageData[i + 2] = (shade * 96) * (0.5 + data[j] * 0.007);\r\n\r\n        }\r\n\r\n        context.putImageData(image, 0, 0);\r\n\r\n        // Scaled 4x\r\n\r\n        const canvasScaled = document.createElement('canvas');\r\n        canvasScaled.width = width * 4;\r\n        canvasScaled.height = height * 4;\r\n\r\n        context = canvasScaled.getContext('2d');\r\n        context.scale(4, 4);\r\n        context.drawImage(canvas, 0, 0);\r\n\r\n        image = context.getImageData(0, 0, canvasScaled.width, canvasScaled.height);\r\n        imageData = image.data;\r\n\r\n        for (let i = 0, l = imageData.length; i < l; i += 4) {\r\n\r\n            const v = ~~(Math.random() * 5);\r\n\r\n            imageData[i] += v;\r\n            imageData[i + 1] += v;\r\n            imageData[i + 2] += v;\r\n\r\n        }\r\n\r\n        context.putImageData(image, 0, 0);\r\n\r\n        return canvasScaled;\r\n\r\n    }\r\n\r\n    function generateHeight(width, height) {\r\n\r\n        let seed = Math.PI / 4;\r\n        window.Math.random = function () {\r\n\r\n            const x = Math.sin(seed++) * 10000;\r\n            return x - Math.floor(x);\r\n\r\n        };\r\n\r\n        const size = width * height,\r\n        data = new Uint8Array(size);\r\n        const perlin = new ImprovedNoise(),\r\n        z = Math.random() * 100;\r\n\r\n        let quality = 1;\r\n\r\n        for (let j = 0; j < 4; j++) {\r\n\r\n            for (let i = 0; i < size; i++) {\r\n\r\n                const x = i % width,\r\n                y = ~~(i / width);\r\n                data[i] += Math.abs(perlin.noise(x / quality, y / quality, z) * quality * 1.75);\r\n\r\n            }\r\n\r\n            quality *= 5;\r\n\r\n        }\r\n\r\n        return data;\r\n\r\n    }\r\n\r\n    function resizeRendererToDisplaySize(renderer) {\r\n        const sceneRef = renderer.domElement;\r\n        const width = sceneRef.clientWidth;\r\n        const height = sceneRef.clientHeight;\r\n        const needResize = sceneRef.width !== width || sceneRef.height !== height;\r\n        if (needResize) {\r\n            renderer.setSize(width, height, false);\r\n        }\r\n        return needResize;\r\n    }\r\n    \r\n    function onKeyDown( event ) {\r\n\r\n        switch ( event.code ) {\r\n\r\n            case 'ArrowUp':\r\n            case 'KeyW': controls.moveForward = true; break;\r\n\r\n            case 'ArrowDown':\r\n            case 'KeyS': controls.moveBackward = true; break;\r\n\r\n            case 'ArrowLeft':\r\n            case 'KeyA': controls.moveLeft = true; break;\r\n\r\n            case 'ArrowRight':\r\n            case 'KeyD': controls.moveRight = true; break;\r\n\r\n            // case 'KeyC': controls.crouch = true; break;\r\n            // case 'Space': controls.jump = true; break;\r\n            // case 'ControlLeft':\r\n            // case 'ControlRight': controls.attack = true; break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    function onKeyUp( event ) {\r\n\r\n        switch ( event.code ) {\r\n\r\n            case 'ArrowUp':\r\n            case 'KeyW': controls.moveForward = false; break;\r\n\r\n            case 'ArrowDown':\r\n            case 'KeyS': controls.moveBackward = false; break;\r\n\r\n            case 'ArrowLeft':\r\n            case 'KeyA': controls.moveLeft = false; break;\r\n\r\n            case 'ArrowRight':\r\n            case 'KeyD': controls.moveRight = false; break;\r\n\r\n            // case 'KeyC': controls.crouch = false; break;\r\n            // case 'Space': controls.jump = false; break;\r\n            // case 'ControlLeft':\r\n            // case 'ControlRight': controls.attack = false; break;\r\n        }\r\n    }\r\n    \r\n    \r\n    function animate() {\r\n        if (ready) {\r\n            var raycaster = new THREE.Raycaster();\r\n            raycaster.set(character.root.position.add(new THREE.Vector3(0, 100, 0)), new THREE.Vector3(0, -1, 0));\r\n            var intersects = raycaster.intersectObject(mesh);\r\n            character.root.position.y = intersects[0].point.y + 10;\r\n        }\r\n        render();\r\n        stats.update();\r\n        requestAnimationFrame(animate);\r\n\r\n    }\r\n\r\n    function render() {\r\n        var delta = clock.getDelta();\r\n        //controls.update(delta);\r\n        character.update( delta );\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n    init();\r\n    \r\n}","import React, { Component } from 'react';\r\nimport ThreeEntryPoint from '../threejs/ThreeEntryPoint';\r\n\r\nexport default class ThreeContainer extends Component {\r\n\r\n  componentDidMount() {\r\n    ThreeEntryPoint(this.scene);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n    <div id=\"loading\">\r\n        <div>\r\n            <div>...loading...</div>\r\n            <div class=\"progress\">\r\n                <div id=\"progressbar\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div id=\"cvs\" ref={element => this.scene = element} />\r\n    </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport ThreeContainer from './components/ThreeContainer';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <ThreeContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}